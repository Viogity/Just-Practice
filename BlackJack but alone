#include <array>
#include <ctime>
#include <cstdlib>
#include <iostream>

//Card names
enum CardName
{
	RANK_2,
	RANK_3,
	RANK_4,
	RANK_5,
	RANK_6,
	RANK_7,
	RANK_8,
	RANK_9,
	RANK_10,
	RANK_VALET,
	RANK_QUEEN,
	RANK_KING,
	RANK_TYZ,
	MAX_RANKS
};
//Card suits
enum CardSuit
{
	SUIT_KRESTY,
	SUIT_BUBNI,
	SUIT_CHERVI,
	SUIT_PIKI,
	MAX_SUITS
};
//Information about each card
struct Card
{
	CardName name;
	CardSuit suit;
};

void PrintCardName(const Card& card)
{
	switch (card.name)
	{
	case RANK_2:		std::cout << "2"; break;
	case RANK_3:		std::cout << "3"; break;
	case RANK_4:		std::cout << "4"; break;
	case RANK_5:		std::cout << "5"; break;
	case RANK_6:		std::cout << "6"; break;
	case RANK_7:		std::cout << "7"; break;
	case RANK_8:		std::cout << "8"; break;
	case RANK_9:		std::cout << "9"; break;
	case RANK_10:		std::cout << "10"; break;
	case RANK_VALET:	std::cout << "V"; break;
	case RANK_QUEEN:	std::cout << "Q"; break;
	case RANK_KING:		std::cout << "K"; break;
	case RANK_TYZ:		std::cout << "T"; break;
	}

	switch (card.suit)
	{
	case SUIT_KRESTY:	std::cout << "K"; break;
	case SUIT_BUBNI:	std::cout << "B"; break;
	case SUIT_CHERVI:	std::cout << "C"; break;
	case SUIT_PIKI:		std::cout << "P"; break;
	}
}

void PrintDeck(const std::array<Card, 52> &deck)
{
	for (const auto &element: deck)
	{
		PrintCardName(element);
		std::cout << ' ';
	}
	std::cout << '\n';
}
//this is a mechanism of shuffle cards
void SwapCard(Card &card1, Card &card2)
{
	Card temp = card1;
	card1 = card2;
	card2 = temp;
}

int GetRandomNumber(int min, int max)
{
	static const double fraction = 1.0 / (static_cast<double>(RAND_MAX) + 1.0);
	return static_cast<int>(rand() * fraction * (max - min + 1) + min);
}

void ShuffleDeck(std::array<Card, 52>&deck)
{
	for (int i = 0; i < 52; i++)
	{
		int SwapCardId = GetRandomNumber(0, 51);
		SwapCard(deck[i], deck[SwapCardId]);
	}
}

int CardNumber(const Card& card)
{
	switch (card.name)
	{
	case RANK_2:		return 2;
	case RANK_3:		return 3;
	case RANK_4:		return 4;
	case RANK_5:		return 5;
	case RANK_6:		return 6;
	case RANK_7:		return 7;
	case RANK_8:		return 8;
	case RANK_9:		return 9;
	case RANK_10:		return 10;
	case RANK_VALET:	return 10;
	case RANK_QUEEN:	return 10;
	case RANK_KING:		return 10;
	case RANK_TYZ:		return 1;
	}
	return 0;
}

void PlatBlackJack(std::array<Card, 52>& deck)
{
	ShuffleDeck(deck);
	int Player{ 0 }, Diler(0);
	Diler += CardNumber(deck[0]);
	Player += CardNumber(deck[1]);
	int cardnumber{ 2 };
	int stop{ true };
	do
	{
		std::cout << "You have " << Player << " point!\n";
		std::cout << "hit or stop, Enter 1 or 0: ";
		std::cin >> stop;
		if (cardnumber == 52)
		{
			stop = 0;
		}
		if (stop == 1)
		{
			Player += CardNumber(deck[cardnumber]);
			++cardnumber;
			std::cout << '\n';
		}
	} while (stop);
	std::cout << '\n';
	if (Player <= 21) std::cout << "You have: " << Player << " points, you win!!!\n";
	if (Player > 21) std::cout << "You have: " << Player << " points, you lose(\n";
}

int main()
{
	//I need it to get random number
	srand(static_cast<unsigned int>(time(0)));

	std::array<Card, 52>deck; 
	int card = 0;
	for (int suit = 0; suit < MAX_SUITS; suit++)
	{
		for (int rank = 0; rank < MAX_RANKS; rank++)
		{
			deck[card].suit = static_cast<CardSuit>(suit);
			deck[card].name = static_cast<CardName>(rank);
			++card;
		}
	}
	PrintDeck(deck);
	ShuffleDeck(deck);
	PrintDeck(deck);
	std::cout << '\n';
	PlatBlackJack(deck);
	return 0;
}
